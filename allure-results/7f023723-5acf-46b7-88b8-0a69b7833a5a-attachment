# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: To-Do App Tests >> should add a new task
- Location: C:\Users\gurra\OneDrive\Desktop\TodoApp\tests\TodoAppTests.spec.js:9:9

# Error details

```
Error: page.goto: Target page, context or browser has been closed
Call log:
  - navigating to "http://localhost:8081/", waiting until "load"

    at C:\Users\gurra\OneDrive\Desktop\TodoApp\tests\TodoAppTests.spec.js:6:20
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test.describe('To-Do App Tests', () => {
   4 |
   5 |     test.beforeEach(async ({ page }) => {
>  6 |         await page.goto('http://localhost:8081/'); // Update with your app's URL
     |                    ^ Error: page.goto: Target page, context or browser has been closed
   7 |     });
   8 |
   9 |     test('should add a new task', async ({ page }) => {
  10 |         await page.fill('//input[@placeholder="Add a new Todo"]', 'Buy groceries');
  11 |         await page.click('//*[@id="root"]/div/div[2]/div/div');
  12 |         await expect(page.locator('//*[@id="root"]/div/div[3]/div/div/div/div[1]')).toBeVisible();
  13 |         await page.waitForTimeout(2000);
  14 |     });
  15 |
  16 |     test('should edit an existing task', async ({ page }) => {
  17 |         await page.fill('//input[@placeholder="Add a new Todo"]', 'Go jogging');
  18 |         await page.click('text=Add');
  19 |         
  20 |         await expect(page.locator('text=Go jogging')).toBeVisible();
  21 |
  22 |         await page.waitForTimeout(4000);
  23 |     });
  24 |     test('should edit a todo', async ({ page }) => {
  25 |         // Add a todo first
  26 |         await page.fill('input[placeholder="Add a new Todo"]', 'Go jogging');
  27 |         await page.click('text=Add');
  28 |
  29 |         await expect(page.locator('text=Go jogging')).toBeVisible();
  30 |         
  31 |         const editButton = page.locator('text=Edit');
  32 |         await expect(editButton).toBeVisible();
  33 |         await editButton.click();
  34 |         
  35 |         const todoInput = page.locator('//*[@id="root"]/div/div[3]/div/div/div/input');
  36 |         await expect(todoInput).toBeVisible();
  37 |
  38 |         await todoInput.fill('Go running');
  39 |
  40 |         const saveButton = page.locator('text=Save');
  41 |         await expect(saveButton).toBeVisible();
  42 |         await saveButton.click();
  43 |         
  44 |         await expect(page.locator('text=Go running')).toBeVisible();
  45 |         await expect(page.locator('text=Go jogging')).not.toBeVisible();
  46 |     });
  47 |     
  48 |     test('should delete a todo', async ({ page }) => {
  49 |         
  50 |         // Add a todo first
  51 |         await page.fill('input[placeholder="Add a new Todo"]', 'Go jogging');
  52 |         await page.click('text=Add');
  53 |         
  54 |         // Click Delete button
  55 |         await page.click('text=Delete');
  56 |         
  57 |         // Verify the todo is deleted
  58 |         await expect(page.locator('text=Go jogging')).not.toBeVisible();
  59 |     });
  60 | });
  61 |
```